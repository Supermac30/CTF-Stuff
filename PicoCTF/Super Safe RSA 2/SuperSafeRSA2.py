""" 
    This code already has the values for c and n initialised.
    Because d must be small, it will not take much time at all to decode the value of p
"""

c = 70648453443799176561273192613433897430037027838853116044040718950068906876144287731047805056610163038147104640594001502798337467509546162576662030546605519991910425967761459464534457596325336944667219755507066489390204229698692891912490412513035576883365639588816054344956397379971485674650819037449059115199
n = 123885884548649055174946013077323183618607479358443934842746956872289241405116636012909279872061477537649004574771569976757356410676209055332222477996214557124237835552585109457785115238769772201078375029876189782516963841998081872241312264662988324642461867957671535019831757671808586018026593299701392488081
d = 1

while True:
    try:
        possP = pow(c, d, n)
        plaintext = bytearray.fromhex(hex(possP)[2:]).decode()
        print("d =",d)
        print(plaintext)
        break
    except:
        pass
    d += 1

